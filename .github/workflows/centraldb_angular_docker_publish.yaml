name: Build & Publish CentralDashboard-Angular Docker image
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - v*-branch
    paths:
      - components/centraldashboard-angular/**
      - releasing/version/VERSION

env:
  IMG: ghcr.io/kubeflow/kubeflow/centraldashboard-angular

jobs:
  push_to_registry:
    name: Build & Push image to GHCR
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - uses: dorny/paths-filter@v3
      id: filter
      with:
        base: ${{ github.ref }}
        filters: |
          version:
            - 'releasing/version/VERSION'

    - name: Set registry and credentials  # To be removed
      id: registry
      run: |
        if [[ "${GITHUB_REPOSITORY}" == "kubeflow/dashboard" ]]; then
          echo "registry=ghcr.io" >> $GITHUB_OUTPUT
          echo "username=${{ github.actor }}" >> $GITHUB_OUTPUT
          echo "password=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_OUTPUT
          echo "image=ghcr.io/kubeflow/dashboard" >> $GITHUB_OUTPUT
        else
          echo "registry=${{ secrets.FORK_REGISTRY || 'docker.io' }}" >> $GITHUB_OUTPUT
          echo "username=${{ secrets.FORK_REGISTRY_USERNAME }}" >> $GITHUB_OUTPUT
          echo "password=${{ secrets.FORK_REGISTRY_PASSWORD }}" >> $GITHUB_OUTPUT
          echo "image=${{ secrets.FORK_IMAGE || format('docker.io/{0}/dashboard-fork', secrets.FORK_REGISTRY_USERNAME) }}" >> $GITHUB_OUTPUT
        fi


    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ${{ steps.registry.outputs.registry }} 
        username: ${{ steps.registry.outputs.username }} 
        password: ${{ steps.registry.outputs.password }} 


    - name: Run CentralDashboard-Angular build/push
      run: |
        cd components/centraldashboard-angular
        make IMG=${{ steps.registry.outputs.image }} docker-build docker-push
    
    - name: Run CentralDashboard-Angular build/push latest
      if: github.ref == 'refs/heads/main'
      run: |
        export TAG=latest
        cd components/centraldashboard-angular
        make IMG=${{ steps.registry.outputs.image }} docker-build docker-push

    - name: Run CentralDashboard-Angular build/push on Version change
      id: version
      if: steps.filter.outputs.version == 'true'
      run: |
        export TAG=$(cat releasing/version/VERSION)
        cd components/centraldashboard-angular
        make IMG=${{ steps.registry.outputs.image }}docker-build docker-push 